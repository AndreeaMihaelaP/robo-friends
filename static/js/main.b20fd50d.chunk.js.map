{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","id","name","email","className","alt","src","CardList","robots","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","borderTop","height","children","App","useState","roboFriends","setRoboFriends","searchField","setSearchField","useEffect","fetch","response","json","filter","robot","toLowerCase","includes","length","event","target","value","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wMAYeA,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,2BCOCQ,EAZF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACxB,OACE,sBAAKC,UAAU,qDAAf,UACE,qBAAKC,IAAI,SAASC,IAAG,+BAA0BL,EAA1B,cACrB,gCACE,mCAAMC,KACN,4BAAIC,WCaGI,EAjBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAClB,OACE,8BACGA,EAAOC,KAAI,SAACC,EAAMC,GACjB,OACE,cAAC,EAAD,CAEEV,GAAIO,EAAOG,GAAGV,GACdC,KAAMM,EAAOG,GAAGT,KAChBC,MAAOK,EAAOG,GAAGR,OAHZK,EAAOG,GAAGV,UCIZW,EAZG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACnB,OACE,uBAEET,UAAU,mCACVU,KAAK,SACLC,YAAY,gBACZC,SAAUH,KCMDI,EAbA,SAACC,GACd,OACE,qBACEC,MAAO,CACLC,UAAW,SACXC,UAAW,mBACXC,OAAQ,SAJZ,SAMGJ,EAAMK,YCuCEC,G,MAzCH,WAAO,IAAD,EACsBC,mBAAS,IAD/B,mBACTC,EADS,KACIC,EADJ,OAEsBF,mBAAS,KAF/B,mBAETG,EAFS,KAEIC,EAFJ,KAIhBC,qBAAU,WACRC,MAAM,4CACHrC,MAAK,SAACsC,GAAD,OAAcA,EAASC,UAC5BvC,MAAK,SAACc,GAAD,OAAYmB,EAAenB,QAClC,IAEHsB,qBAAU,WAGRH,GAAe,SAACD,GAAD,OACbA,EAAYQ,QAAO,SAACC,GAClB,OAAOA,EAAMjC,KAAKkC,cAAcC,SAAST,EAAYQ,uBAGxD,CAACR,IAMJ,OACE,8BACIF,EAAYY,OAGZ,sBAAKlC,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWS,aAXI,SAAC0B,GACtBV,EAAeU,EAAMC,OAAOC,UAWtB,cAAC,EAAD,UACE,cAAC,EAAD,CAAUjC,OAAQkB,SANtB,oBAAItB,UAAU,KAAd,8BC3BRsC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BvD,M","file":"static/js/main.b20fd50d.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\n\r\nconst Card = ({ id, name, email }) => {\r\n  return (\r\n    <div className=\"bg-light-gray tc grow br3 pa3 ma2 dib bw2 shadow-5\">\r\n      <img alt=\"robots\" src={`https://robohash.org/${id}?200x200`} />\r\n      <div>\r\n        <h2> {name}</h2>\r\n        <p>{email}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\n\r\nimport Card from \"../components/Card\";\r\n\r\nconst CardList = ({ robots }) => {\r\n  return (\r\n    <div>\r\n      {robots.map((user, i) => {\r\n        return (\r\n          <Card\r\n            key={robots[i].id}\r\n            id={robots[i].id}\r\n            name={robots[i].name}\r\n            email={robots[i].email}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardList;\r\n","import React from \"react\";\r\n\r\nconst SearchBox = ({ searchChange }) => {\r\n  return (\r\n    <input\r\n      // value={}\r\n      className=\"pa3 ma2 ba b--gray bg-light-gray\"\r\n      type=\"search\"\r\n      placeholder=\"search robots\"\r\n      onChange={searchChange}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React from \"react\";\r\n\r\nconst Scroll = (props) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        overflowY: \"scroll\",\r\n        borderTop: \"1px dashed black\",\r\n        height: \"500px\",\r\n      }}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scroll;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport CardList from \"../components/CardList\";\r\nimport SearchBox from \"../components/SearchBox\";\r\nimport Scroll from \"../components/Scroll\";\r\n\r\nimport \"./App.css\";\r\n\r\nconst App = () => {\r\n  const [roboFriends, setRoboFriends] = useState([]);\r\n  const [searchField, setSearchField] = useState(\" \");\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://jsonplaceholder.cypress.io/users\")\r\n      .then((response) => response.json())\r\n      .then((robots) => setRoboFriends(robots));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // fix search filter robots\r\n\r\n    setRoboFriends((roboFriends) =>\r\n      roboFriends.filter((robot) => {\r\n        return robot.name.toLowerCase().includes(searchField.toLowerCase());\r\n      })\r\n    );\r\n  }, [searchField]);\r\n\r\n  const onSearchChange = (event) => {\r\n    setSearchField(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!roboFriends.length ? (\r\n        <h1 className=\"tc\">Loading ... </h1>\r\n      ) : (\r\n        <div className=\"tc\">\r\n          <h1 className=\"f1\">RoboFriends</h1>\r\n          <SearchBox searchChange={onSearchChange} />\r\n          <Scroll>\r\n            <CardList robots={roboFriends} />\r\n          </Scroll>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport \"tachyons\";\nimport \"./index.css\";\nimport App from \"./containers/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}